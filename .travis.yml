language: csharp

os:
 - linux

dist: bionic
mono: none
dotnet: 2.2.402

install:
  - dotnet tool install -g dotnet-format
  - export PATH="$PATH:$HOME/.dotnet/tools"
  - dotnet-format --version
script:
 - echo "Checking format..." 
 - dotnet format --check --dry-run -w src/Installer
 - dotnet format --check --dry-run -w src/Neo.Compiler.MSIL
 - dotnet format --check --dry-run -w src/Neo.SmartContract.Framework
 - dotnet format --check --dry-run -w tests/Neo.Compiler.MSIL.UnitTests
 - dotnet format --check --dry-run -w tests/Neo.SmartContract.Framework.UnitTests
 - cd tests/Neo.Compiler.MSIL.UnitTests
 - find * -name *.csproj | xargs -I % dotnet add % package coverlet.msbuild
 - dotnet test -v m /p:CollectCoverage=true /p:CoverletOutputFormat=json /p:CoverletOutput='../coverageA.json' /p:Exclude="[Neo.SmartContract.*]*"
 - cd ../Neo.SmartContract.Framework.UnitTests
 - find * -name *.csproj | xargs -I % dotnet add % package coverlet.msbuild
 - dotnet test -v m /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput='../../coverage.xml' /p:MergeWith='../coverageA.json' /p:Exclude="[Neo.SmartContract.*]*"
after_success:
 # Send coverage
 - cd ../../
 - echo "Test Success - Branch($TRAVIS_BRANCH) Pull Request($TRAVIS_PULL_REQUEST) Tag($TRAVIS_TAG)"
 - bash <(curl -s https://codecov.io/bash) -v -f 'coverage.xml'

